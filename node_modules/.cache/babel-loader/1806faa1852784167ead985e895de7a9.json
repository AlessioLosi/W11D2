{"ast":null,"code":"var _jsxFileName = \"/Users/alessiaolosi/Desktop/esercizi Epicode/W11D2/src/components/CompanySearchResults.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport Job from './Job';\nimport { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { getJobsAction } from '../redux/actions/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CompanySearchResults = () => {\n  _s();\n\n  const params = useParams();\n  const dispatch = useDispatch(); // Ottieni i risultati della ricerca dei lavori dallo stato globale\n\n  const jobs = useSelector(state => state.searchResults); // Effettua la richiesta dei lavori quando il componente viene montato\n\n  useEffect(() => {\n    if (params.companyName) {\n      dispatch(getJobsAction(params.companyName));\n    }\n  }, [dispatch, params.companyName]); // Si assicura che l'effetto venga eseguito quando `dispatch` o `companyName` cambiano\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: jobs.map(jobData => /*#__PURE__*/_jsxDEV(Job, {\n          data: jobData\n        }, jobData._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CompanySearchResults, \"7YeuMlAg+MmqjZZbT9QgMNzIoyM=\", false, function () {\n  return [useParams, useDispatch, useSelector];\n});\n\n_c = CompanySearchResults;\nexport default CompanySearchResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompanySearchResults\");","map":{"version":3,"names":["useEffect","useState","Container","Row","Col","Job","useParams","useSelector","useDispatch","getJobsAction","CompanySearchResults","params","dispatch","jobs","state","searchResults","companyName","map","jobData","_id"],"sources":["/Users/alessiaolosi/Desktop/esercizi Epicode/W11D2/src/components/CompanySearchResults.jsx"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport Job from './Job'\nimport { useParams } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { useDispatch } from 'react-redux'\nimport { getJobsAction } from '../redux/actions/actions'\nconst CompanySearchResults = () => {\n  const params = useParams()\n  const dispatch = useDispatch()\n\n  // Ottieni i risultati della ricerca dei lavori dallo stato globale\n  const jobs = useSelector((state) => state.searchResults)\n\n  // Effettua la richiesta dei lavori quando il componente viene montato\n  useEffect(() => {\n    if (params.companyName) {\n      dispatch(getJobsAction(params.companyName))\n    }\n  }, [dispatch, params.companyName]) // Si assicura che l'effetto venga eseguito quando `dispatch` o `companyName` cambiano\n\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          {jobs.map((jobData) => (\n            <Job key={jobData._id} data={jobData} />\n          ))}\n        </Col>\n      </Row>\n    </Container>\n  )}\n\nexport default CompanySearchResults\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,aAAT,QAA8B,0BAA9B;;;AACA,MAAMC,oBAAoB,GAAG,MAAM;EAAA;;EACjC,MAAMC,MAAM,GAAGL,SAAS,EAAxB;EACA,MAAMM,QAAQ,GAAGJ,WAAW,EAA5B,CAFiC,CAIjC;;EACA,MAAMK,IAAI,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,aAAlB,CAAxB,CALiC,CAOjC;;EACAf,SAAS,CAAC,MAAM;IACd,IAAIW,MAAM,CAACK,WAAX,EAAwB;MACtBJ,QAAQ,CAACH,aAAa,CAACE,MAAM,CAACK,WAAR,CAAd,CAAR;IACD;EACF,CAJQ,EAIN,CAACJ,QAAD,EAAWD,MAAM,CAACK,WAAlB,CAJM,CAAT,CARiC,CAYE;;EAGnC,oBACE,QAAC,SAAD;IAAA,uBACE,QAAC,GAAD;MAAA,uBACE,QAAC,GAAD;QAAA,UACGH,IAAI,CAACI,GAAL,CAAUC,OAAD,iBACR,QAAC,GAAD;UAAuB,IAAI,EAAEA;QAA7B,GAAUA,OAAO,CAACC,GAAlB;UAAA;UAAA;UAAA;QAAA,QADD;MADH;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAUE,CAzBJ;;GAAMT,oB;UACWJ,S,EACEE,W,EAGJD,W;;;KALTG,oB;AA2BN,eAAeA,oBAAf"},"metadata":{},"sourceType":"module"}